# Startup
# 1. sudo docker swarm init --advertise-addr 192.168.2.104
# 2. sudo docker swarm join <token>
# 3. sudo docker node ls
# 4. sudo docker stack deploy -c docker-compose.yml einwohner
# 5. sudo docker service ls

# Shutdown
# 1. sudo docker service scale einwohner_app=0
# 2. sudo docker service scale einwohner_db=0
# 3. sudo docker stack rm einwohner
# 4. docker swarm leave --force
# command: sh -c '/usr/local/tomcat/bin/wait-for.sh db:3306 -- catalina.sh run'

version: '3.7'
services:
  app:
    image: ramansharma/einwohnertomcat:v0.0.1
    # As per metricbeat documentation these volumes are required to map to collect information about host os in which docker is running
    # https://www.elastic.co/guide/en/beats/metricbeat/current/running-on-docker.html
    deploy:
      endpoint_mode: vip # Set up a virtual ip which can be used to connect to cluster
      mode: replicated # It tells that each node in swarm can have many containers, global : means each node will have only one container
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    ports:
      - '8080:8080'
    volumes:
     - type: bind
       source: /proc
       target: /hostfs/proc
       read_only: true
     - type: bind
       source: /sys/fs/cgroup
       target: /hostfs/sys/fs/cgroup
       read_only: true
     - type: bind
       source: /
       target: /hostfs
       read_only: true
    environment:
     - system.hostfs=/var/run/docker.sock
    networks:
      hostnet: {}
    networks:
      - einwohner_net
      - elk_elk_net
  # This image is to get a view of containers in UI
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8180:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - einwohner_net
networks:
  einwohner_net:
  elk_elk_net:
    external: true
  hostnet:
    external: true
    name: host

